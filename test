def generate_report(self, test_duration, metrics):
    """Generate Excel report with error handling for file save"""
    try:
        # Create DataFrame from results
        df_results = pd.DataFrame(self.results)
        
        # Create output directory if it doesn't exist
        os.makedirs(os.path.dirname(OUTPUT_EXCEL), exist_ok=True)
        
        with pd.ExcelWriter(
            OUTPUT_EXCEL,
            engine='openpyxl',
            mode='w'  # Explicit overwrite mode
        ) as writer:
            # --- Sheet 1: Detailed Results ---
            df_results.to_excel(
                writer,
                sheet_name='Detailed Results',
                index=False,
                columns=[
                    "token_generation_time",
                    "process_id",
                    "api_status",
                    "response_time_sec",
                    "success",
                    "error_type"
                ]
            )
            
            # --- Sheet 2: Summary ---
            summary_data = {
                'Metric': [
                    'Total Processes',
                    'Successful APIs',
                    'HTTP Failures',
                    'Silent Failures',
                    'Error Rate',
                    'Average Latency',
                    'Min Latency',
                    'Max Latency',
                    'Median Latency',
                    '90th Percentile',
                    '95th Percentile',
                    'Std Dev',
                    'Total Duration',
                    'Throughput',
                    'Token Refresh Count'
                ],
                'Value': [
                    metrics["total_processes"],
                    metrics["successful_apis"],
                    metrics["http_failures"],
                    metrics["silent_failures"],
                    f"{metrics['error_rate']:.2f}%",
                    f"{metrics['avg_latency']:.4f}s",
                    f"{metrics['min_latency']:.4f}s",
                    f"{metrics['max_latency']:.4f}s",
                    f"{metrics['median_latency']:.4f}s",
                    f"{metrics['p90_latency']:.4f}s",
                    f"{metrics['p95_latency']:.4f}s",
                    f"{metrics['std_dev_latency']:.4f}s",
                    f"{metrics['total_duration']:.2f}s",
                    f"{metrics['throughput']:.2f} req/s",
                    metrics["refresh_count"]
                ]
            }
            pd.DataFrame(summary_data).to_excel(
                writer,
                sheet_name='Summary',
                index=False
            )
            
            # Set first sheet as active
            writer.book.active = 0
            
    except PermissionError:
        print(f" ERROR: Could not save {OUTPUT_EXCEL} (file may be open in Excel)")
        raise
    except Exception as e:
        print(f" Unexpected error saving report: {str(e)}")
        raise
